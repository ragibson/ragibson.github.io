[{"content":"","date":"25 July 2023","permalink":"/tags/cybersecurity/","section":"Tags","summary":"","title":"cybersecurity"},{"content":"","date":"25 July 2023","permalink":"/tags/github/","section":"Tags","summary":"","title":"github"},{"content":"","date":"25 July 2023","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"25 July 2023","permalink":"/tags/programming/","section":"Tags","summary":"","title":"programming"},{"content":"","date":"25 July 2023","permalink":"/","section":"Ryan A. Gibson","summary":"","title":"Ryan A. Gibson"},{"content":"","date":"25 July 2023","permalink":"/tags/steganography/","section":"Tags","summary":"","title":"steganography"},{"content":" Table of contents # What is steganography? Real-world examples of steganography How does (digital) steganography work? More creative steganography techniques See also and references What is steganography? # In short, steganography is the art of concealing information within another, non-secret message, much like the use of invisible ink on a seemingly innocuous letter.1 The idea is that you could pass the message through many untrusted carriers, such as the internet, without arousing suspicion from most observers.\nAlice transfers a hidden message to Bob over the internet within a seemingly unremarkable image. In today\u0026rsquo;s digital age, you may be surprised as to how much data can be crammed into a file without changing it much at all. For example, below are three tiny 220x220 photos of a flower, but\nOne contains the entire, uncompressed text of the United States Constitution. Another contains the entire text of Shakespeare\u0026rsquo;s Macbeth, containing a little under 20k words. These tiny flowers look practically identical, but two of them hide thousands of words of information. Can you tell which is which? We\u0026rsquo;ll delve into how this is possible in How does (digital) steganography work?, but first let\u0026rsquo;s explore some real-world examples.\nReal-world examples of steganography # We\u0026rsquo;ll start with some physical, non-digital instances.\nThe EURion constellation # One of the simplest methods to hide data is to overlay a pattern in the hopes that it can be recovered later.\nFor example, many banknotes worldwide contain a precise arrangement of circles designed to allow printers and imaging software to combat counterfeiting operations. This has never been officially publicized, but is informally called the \u0026ldquo;EURion constellation\u0026rdquo; and has been integrated into at least ~60 countries\u0026rsquo; currencies.\nIf you happen to have a scanner and some cash on hand, you can try copying one of these banknotes. Depending on the model and brand of the scanner, it might refuse to copy or intentionally corrupt the print by adding stripes across the bill! The one that I own tends to forcibly stop the print halfway through.\nLeft: the specific pattern of circles in the EURion constellation. Middle: A portion of the back of an American $20 bill. Right: Same as the middle, but with the various constellations highlighted in green. Several other examples of the EURion constellation on British, German, and Euro banknotes. Some are more creative with their inclusion into the design than others. Printer \u0026ldquo;Machine Identification Codes\u0026rdquo; # In another covert application of steganography, many color printers use tiny yellow dots that are invisible to the naked eye to overlay a tracking watermark. These encode the serial number of the printer and some date and time information across every printed page.\nThis is also rumored to be one of the reasons why some printers refuse to print black-and-white documents when they are running low on color ink.\nThe existence of this technology remained unknown to the public for around two decades as it was developed under secret agreements with various national governments to enhance their forensic tracing capabilities. As a result, it\u0026rsquo;s been used to track down counterfeiters and whistleblowers across the world.\nAn image of text printed from a Laserjet printer. Blue light makes the Machine Identification Code visible, consisting of scattered yellow dots that are ~0.1mm wide. Steganography in video games # Game developers also use steganography to identify the author of screenshots or gameplay videos, especially when they include cheating, abuse, or unauthorized use of private servers.\nIn the 2000s, Blizzard implemented very faint watermarks on screenshots of World of Warcraft which contained repeating patterns of dots across the entire screen. These patterns, developed by Digimarc, encoded various details of the user\u0026rsquo;s account and the server that they were logged into. Like the other examples above, this screenshot tagging remained entirely secret for the first few years of its existence.\nTwo examples of the watermarks used in World of Warcraft, heavily post-processed to reveal the hidden pattern. Similarly, Microsoft encoded hardware information in the user interface of the Xbox 360\u0026rsquo;s early builds. Each console\u0026rsquo;s animations were unique, which allowed the company to crack down on potential leakers. At the time, the employees were under NDAs and would be subject to civil penalties for disclosing nonpublic information about the console\u0026rsquo;s development.\nHow does (digital) steganography work? # In the realm of digital steganography, there are many different techniques, but one of the simplest is \u0026ldquo;Least Significant Bit\u0026rdquo; (LSB) steganography.\nBasically, the method takes advantage of the fact that most data formats encode information in binary numbers, and the least significant bits of these have the smallest impact on the overall value. By replacing these unimportant bits with a secondary message, we can hide data without making any apparent changes to the file\u0026rsquo;s original appearance or meaning.\nFor example, a common image encoding is to store how much red, green, and blue (RGB) is in each pixel with one byte for each color. These values range from 0 to 255 and we can usually change them slightly without most people noticing. Human senses are just far too imprecise to tell the difference, especially when you\u0026rsquo;re not looking for it!\nAn example of how we can replace the LSBs of an image\u0026rsquo;s pixels to encode a hidden message. The resulting change is nigh-impossible to visually detect. However, this hidden data can be easily exposed in a \u0026ldquo;visual attack\u0026rdquo; where we inspect the LSBs of the image. For instance, if we perform this attack on the three flowers shown at the start of this post, the differences become obvious.\nTop: the three flower images from the start of this blog post. Bottom: a visualization of the least significant bits of each image. The original image is on the right, and you can faintly see the flower\u0026rsquo;s outline in its LSBs. In contrast,\nThe one on the left appears completely random2 since it contained the contents of Hamlet. The one in the middle contained the uncompressed text of the U.S. Constitution and you can visually confirm that the data only takes up the first ~3/4 of the image. In general, steganographic techniques and their adversarial \u0026ldquo;steganalysis\u0026rdquo; counterparts are constantly evolving. More advanced algorithms than this one will minimize changes to the original image\u0026rsquo;s statistics and would only be detectable with much more sophisticated methods.\nOn the other hand, this simple technique lets us store a considerable amount of data! This is a direct consequence of the use of binary encoding since the last bit in each byte can only change the color by 1/255 (~0.4%) despite taking up 1/8th (12.5%) of the data itself.\nIndeed, in the flower images above we\u0026rsquo;ve replaced a whole 25% of the actual image data but only altered around 1% of the color information. There is a significant trade-off between the amount of hidden data and the impact on the visual quality of the image.3\nA demonstration of the trade-off between the number of LSBs used to hide data in an image and the corresponding loss of the original color information. More creative steganography techniques # While we\u0026rsquo;ve provided a reasonable introduction to the basic ideas, there is an abundance of more interesting methods, so we\u0026rsquo;ll briefly mention some of them here.\nText steganography: Messages can be hidden within the formatting, whitespace, or invisible characters of a text itself. Some more intriguing techniques use specific sentence structures or grammatical constructs to impart information. Think of the stereotypical scenario in which you suspect something is amiss when a friend texts you in a particularly unusual writing style. Spread Spectrum: These techniques spread hidden data over a wide range of frequencies, but at a lower amplitude, effectively concealing the covert message beneath the natural noise of the transmission medium. Similar variants are also applicable to images and videos. Audio steganography: In addition to the usual binary techniques, fine manipulation of echoes, harmonics, or the underlying frequency bands can be used to store information. Networking steganography: Many protocols can be manipulated to convey information through calculated usage of (perhaps nonstandard) features, slight manipulation of timing delays between packets, or intentional corruptions that would appear to be typical transmission errors. EOF steganography: End of file markers or headers can be manipulated to hide data outside the intended scope of a file. While not strictly steganography in the traditional sense, it has been repeatedly used in malware and hacking operations, so it is worth mentioning.4 If these topics sound interesting to you, I highly recommend searching the internet and exploring any new techniques that come to mind!\nSee also and references # My Python package, stego-lsb, which I used to generate the steganographed images in this post. It also supports sounds files and arbitrary sequences of binary data. A forum post containing details of the steganographic methods used in World of Warcraft. A Hacker News thread discussing the tracking methods used in Xbox 360 NDA beta builds. A Computerphile video on steganographic techniques in images, which includes a discussion of a method for JPEG images that is robust to simple visual attacks. More generally, consider the following Wikipedia articles\nSteganography EURion constellation Machine Identification Code Coded anti-piracy, which is a pattern of dots used by the film industry since the 1980s to trace the origins of pirated copies. Deniable encryption techniques, where it is generally impossible to prove that any information is encrypted at all. In fact, steganography comes from Greek word \u0026ldquo;steganographia\u0026rdquo;, which literally means something akin to \u0026ldquo;hidden writing\u0026rdquo;.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nObviously, it\u0026rsquo;s not actually random since this is just compressed English text. In practice, the hidden data should probably be encrypted in some way that increases the apparent randomness. Otherwise, steganography simply becomes an exercise in security through obscurity.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nIf the transmission channel is noisy, a certain amount of error correction would also need to be included, which will necessarily decrease the amount of data available for use. This includes electrical interference on the wire, image compression, audio being played through physical loudspeakers rather than in a perfect digital medium, etc.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nThis is sometimes referred to as stegomalware.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"25 July 2023","permalink":"/posts/steganography-intro/","section":"Posts","summary":"A general introduction to hiding information in plain sight, its uses in the real-world, and how it works in digital mediums.","title":"Steganography: Hiding Data Inside Data"},{"content":"","date":"25 July 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"I considered several domain names before settling on the current one for this website, which are listed here. Indeed, all the following domains should redirect to this site until at least mid-2024 when they come up for renewal.\nVariations of my name # These are fairly straightforward and simply incorporate my name in obvious ways.\nhttps://ryanagibson.com/ https://ryanalexandergibson.com/ https://ryanalexgibson.com/ https://ryangibson.dev/ More creative variations # These are a bit more creative and fun, but they may have limited use in professional circles.\nhttps://ragibs.com/ https://rgibson.dev/ https://ryalgi.com/ This one is a short domain for convenience or perhaps when space is extremely limited.\nhttps://rygi.me Based on my GitHub username # https://ragibson.dev/ https://ragibson.net/ https://ragibson.org/ ","date":"8 July 2023","permalink":"/posts/alternate-domain-names/","section":"Posts","summary":"I considered several domain names before settling on the current one for this website, which are listed here.","title":"Alternate Domain Names"},{"content":"","date":"8 July 2023","permalink":"/tags/domains/","section":"Tags","summary":"","title":"domains"},{"content":"","date":"8 July 2023","permalink":"/tags/about/","section":"Tags","summary":"","title":"about"},{"content":" Hi! I\u0026rsquo;m Ryan # I am currently working as a Quantitative Analyst at Wells Fargo, primarily focusing on risk model research, development, maintenance, and monitoring. In much of my free time, I work on mathematical, statistical, and programming hobby projects.\nFeel free to reach out with any questions, comments, or ideas and I\u0026rsquo;ll try to respond reasonably quickly!\nSome of my interests # In university, my education was in Pure Mathematics and Computer Science with research interests including\n🕸️ Network Science 🚅 High Performance Computing 🔐 Cybersecurity 💽 Operating Systems 🔋 Microarchitecture More recently, I\u0026rsquo;ve been additionally working on\n🤖 Machine Learning 🧮 Numerical Analysis Some projects on GitHub # Feel free to look through my repositories list on GitHub (many are private), but I\u0026rsquo;ve linked some projects in the images below!\n","date":"8 July 2023","permalink":"/about/","section":"Ryan A. Gibson","summary":"A brief introduction to my hobbies, interests, work, etc.","title":"About me"}]